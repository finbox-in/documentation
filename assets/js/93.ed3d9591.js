(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{392:function(t,a,n){"use strict";n.r(a);var s=n(8),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"bankconnect-fetching-enriched-data-using-python-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bankconnect-fetching-enriched-data-using-python-package"}},[t._v("#")]),t._v(" BankConnect: Fetching Enriched data using Python Package")]),t._v(" "),a("p",[t._v("You can use the python package to fetch enriched data for an entity.")]),t._v(" "),a("p",[a("strong",[t._v("Part 1")]),t._v(" of this article with details on installing the package, authentication, advanced settings, identity and uploading statements are listed "),a("RouterLink",{attrs:{to:"/bank-connect/upload-python.html"}},[t._v("on this page")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"accounts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accounts"}},[t._v("#")]),t._v(" Accounts")]),t._v(" "),a("p",[t._v("To fetch accounts use the "),a("code",[t._v("get_accounts")]),t._v(" method. It returns an "),a("strong",[t._v("iterator")]),t._v(" to the account dictionary list, after fetching.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("accounts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_accounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the account dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" account "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" accounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("If the value was not previously retrieved, it will poll and check for progress, and then fetch and cache the retrieved value for next usage.")])]),t._v(" "),a("h3",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This method also has the following "),a("strong",[t._v("optional")]),t._v(" arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reload")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("If provided as "),a("code",[t._v("True")]),t._v(", it will ignore the cached value, and again make an API call and re-fetch the values")]),t._v(" "),a("td",[a("code",[t._v("False")])])])])]),t._v(" "),a("h3",{attrs:{id:"exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In case the "),a("code",[t._v("create")]),t._v(" method was used while creating the entity instance and the entity object was not created on the server yet, it throws "),a("code",[t._v("ValueError")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("In case server could not be reached, it throws "),a("code",[t._v("ServiceTimeOutError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ServiceTimeOutError")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("In case "),a("code",[t._v("entity_id")]),t._v(" cannot be found in our server, it throws "),a("code",[t._v("EntityNotFoundError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.EntityNotFoundError")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("In case the account information could not be extracted by us, it will throw "),a("code",[t._v("ExtractionFailedError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ExtractionFailedError")]),t._v(")")])])]),t._v(" "),a("h3",{attrs:{id:"account-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#account-dictionary"}},[t._v("#")]),t._v(" Account Dictionary")]),t._v(" "),a("p",[t._v("Sample account dictionary:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"months"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-12"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-01"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statements"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_statement"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ifsc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"micr"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Account Number Extracted"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bank"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"axis"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Each of the account dictionary in the account list has the following keys:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("months")]),t._v(": month and year for which data is available. Each of string in this list is of format "),a("code",[t._v('"YYYY-MM"')])]),t._v(" "),a("li",[a("code",[t._v("statements")]),t._v(": list of statement unique identifiers under the account")]),t._v(" "),a("li",[a("code",[t._v("account_id")]),t._v(": unique identifier for an account")]),t._v(" "),a("li",[a("code",[t._v("bank")]),t._v(": name of the bank to which the account belongs")])]),t._v(" "),a("p",[t._v("It also has some account level extracted fields like "),a("code",[t._v("ifsc")]),t._v(", "),a("code",[t._v("micr")]),t._v(", "),a("code",[t._v("account_number")]),t._v(" (which can be "),a("code",[t._v("None")]),t._v(" or could hold a "),a("code",[t._v("string")]),t._v(" value)")]),t._v(" "),a("h2",{attrs:{id:"fraud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fraud"}},[t._v("#")]),t._v(" Fraud")]),t._v(" "),a("p",[t._v("To fetch fraud information use the "),a("code",[t._v("get_fraud_info")]),t._v(" method. It returns an "),a("strong",[t._v("iterator")]),t._v(" to the fraud dictionary list, after fetching.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("fraud_list_iter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_fraud_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the fraud dict dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" fraud_dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" fraud_list_iter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fraud_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("If the value was not previously retrieved, it will poll and check for progress, and then fetch and cache the retrieved value for next usage.")])]),t._v(" "),a("h3",{attrs:{id:"arguments-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-2"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This method also has the following "),a("strong",[t._v("optional")]),t._v(" arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reload")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("If provided as "),a("code",[t._v("True")]),t._v(", it will ignore the cached value, and again make an API call and re-fetch the values")]),t._v(" "),a("td",[a("code",[t._v("False")])])])])]),t._v(" "),a("h3",{attrs:{id:"exceptions-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions-2"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In case the "),a("code",[t._v("create")]),t._v(" method was used while creating the entity instance and the entity object was not created on the server yet, it throws "),a("code",[t._v("ValueError")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("In case server could not be reached, it throws "),a("code",[t._v("ServiceTimeOutError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ServiceTimeOutError")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("In case "),a("code",[t._v("entity_id")]),t._v(" cannot be found in our server, it throws "),a("code",[t._v("EntityNotFoundError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.EntityNotFoundError")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("In case the statement could not be extracted by us, it will throw "),a("code",[t._v("ExtractionFailedError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ExtractionFailedError")]),t._v(")")])])]),t._v(" "),a("h3",{attrs:{id:"fraud-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fraud-dictionary"}},[t._v("#")]),t._v(" Fraud Dictionary")]),t._v(" "),a("p",[t._v("Sample fraud dictionary:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statement_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_statement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fraud_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some_fraud_type"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Each of the fraud dictionaries includes the keys "),a("code",[t._v("statement_id")]),t._v(" and "),a("code",[t._v("fraud_type")]),t._v(" indicating a fraud of which type was found in which statement.")]),t._v(" "),a("p",[t._v("Optionally a key "),a("code",[t._v("transaction_hash")]),t._v(" may be present in some cases in this dictionary for transaction-level frauds indicating the transaction in which the fraud was found.")]),t._v(" "),a("p",[t._v("To know more about "),a("code",[t._v("fraud_type")]),t._v(", refer to "),a("RouterLink",{attrs:{to:"/bank-connect/fraud.html"}},[t._v("Fraud")]),t._v(" section in Basics.")],1),t._v(" "),a("h2",{attrs:{id:"transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transactions"}},[t._v("#")]),t._v(" Transactions")]),t._v(" "),a("p",[t._v("To fetch transactions use the "),a("code",[t._v("get_transactions")]),t._v(" method. It returns an "),a("strong",[t._v("iterator")]),t._v(" to the transaction dictionary list, after fetching.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("transactions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_transactions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the transaction dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" transaction "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" transactions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("If the value was not previously retrieved, it will poll and check for progress, and then fetch and cache the retrieved value for next usage.")])]),t._v(" "),a("h3",{attrs:{id:"arguments-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-3"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This method also has the following "),a("strong",[t._v("optional")]),t._v(" arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reload")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("If provided as "),a("code",[t._v("True")]),t._v(", it will ignore the cached value, and again make an API call and re-fetch the values")]),t._v(" "),a("td",[a("code",[t._v("False")])])]),t._v(" "),a("tr",[a("td",[t._v("account_id")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("If provided, only the transactions of specific "),a("code",[t._v("account_id")]),t._v(" will be retrieved")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("from_date")]),t._v(" "),a("td",[a("code",[t._v("datetime.date")]),t._v(" object")]),t._v(" "),a("td",[t._v("If provided, only the transactions with a date greater than or equal to "),a("code",[t._v("from_date")]),t._v(" will be retrieved.")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("to_date")]),t._v(" "),a("td",[a("code",[t._v("datetime.date")]),t._v(" object")]),t._v(" "),a("td",[t._v("If provided, only the transactions with a date less than or equal to "),a("code",[t._v("to_date")]),t._v(" will be retrieved.")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("p",[t._v("An example for fetching transactions from last 10 days till today:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" finbox_bankconnect "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fbc\n\nentity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entity_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid_for_entity"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetching transactions from last 10 days")]),t._v("\nfrom_date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timedelta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("days"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nto_date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntransactions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_transactions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from_date"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("from_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_date"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print the transaction dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" transaction "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" transactions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"exceptions-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions-3"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In case there is any problem with arguments passed or if "),a("code",[t._v("create")]),t._v(" method was used while creating the entity instance and the entity object was not created on the server yet, it throws "),a("code",[t._v("ValueError")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("In case server could not be reached, it throws "),a("code",[t._v("ServiceTimeOutError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ServiceTimeOutError")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("In case "),a("code",[t._v("entity_id")]),t._v(" cannot be found in our server, it throws "),a("code",[t._v("EntityNotFoundError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.EntityNotFoundError")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("In case the transactions could not be extracted by us, it will throw "),a("code",[t._v("ExtractionFailedError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ExtractionFailedError")]),t._v(")")])])]),t._v(" "),a("h3",{attrs:{id:"transaction-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-dictionary"}},[t._v("#")]),t._v(" Transaction Dictionary")]),t._v(" "),a("p",[t._v("Sample transaction dictionary:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SOME LONG TRANSACTION NOTE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unique_transaction_identifier"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lender_transaction"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5188.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-01-08 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merchant_category"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("922.15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_channel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"salary"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Each of the transaction dictionary in the transaction list has the following keys:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("transaction_note")]),t._v(": exact transaction note / description present in the statement PDF")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(": a unique identifying hash for each transaction")]),t._v(" "),a("li",[a("code",[t._v("description")]),t._v(": describes more information about the "),a("code",[t._v("transaction_channel")]),t._v(" field. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#description"}},[t._v("this")]),t._v(" list for possible values.")],1),t._v(" "),a("li",[a("code",[t._v("account_id")]),t._v(": unique UUID4 identifier for the account to which the transaction belongs to")]),t._v(" "),a("li",[a("code",[t._v("transaction_type")]),t._v(": can be "),a("code",[t._v("debit")]),t._v(" or "),a("code",[t._v("credit")])]),t._v(" "),a("li",[a("code",[t._v("amount")]),t._v(": indicates the transaction amount")]),t._v(" "),a("li",[a("code",[t._v("date")]),t._v(": date of transaction")]),t._v(" "),a("li",[a("code",[t._v("merchant_category")]),t._v(": the category of the merchant in case a transaction is with a merchant. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#merchant-category"}},[t._v("this")]),t._v(" list of possible values.")],1),t._v(" "),a("li",[a("code",[t._v("balance")]),t._v(": account balance just after this transaction")]),t._v(" "),a("li",[a("code",[t._v("transaction_channel")]),t._v(": refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#transaction-channel"}},[t._v("this")]),t._v(" list for possible values.")],1)]),t._v(" "),a("h2",{attrs:{id:"salary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#salary"}},[t._v("#")]),t._v(" Salary")]),t._v(" "),a("p",[t._v("To fetch salary transactions use the "),a("code",[t._v("get_salary")]),t._v(" method. It returns an "),a("strong",[t._v("iterator")]),t._v(" to the salary dictionary list, after fetching.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("salary_iter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the salary dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" salary_dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" salary_iter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("If the value was not previously retrieved, it will poll and check for progress, and then fetch and cache the retrieved value for next usage.")])]),t._v(" "),a("h3",{attrs:{id:"arguments-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-4"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This method also has the following "),a("strong",[t._v("optional")]),t._v(" arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reload")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("If provided as "),a("code",[t._v("True")]),t._v(", it will ignore the cached value, and again make an API call and re-fetch the values")]),t._v(" "),a("td",[a("code",[t._v("False")])])]),t._v(" "),a("tr",[a("td",[t._v("account_id")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("If provided, only the salary of specific "),a("code",[t._v("account_id")]),t._v(" will be retrieved")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("from_date")]),t._v(" "),a("td",[a("code",[t._v("datetime.date")]),t._v(" object")]),t._v(" "),a("td",[t._v("If provided, only the salary with a date greater than or equal to "),a("code",[t._v("from_date")]),t._v(" will be retrieved.")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("to_date")]),t._v(" "),a("td",[a("code",[t._v("datetime.date")]),t._v(" object")]),t._v(" "),a("td",[t._v("If provided, only the salary with a date less than or equal to "),a("code",[t._v("to_date")]),t._v(" will be retrieved.")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("h3",{attrs:{id:"exceptions-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions-4"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In case there is any problem with arguments passed or if "),a("code",[t._v("create")]),t._v(" method was used while creating the entity instance and the entity object was not created on the server yet, it throws "),a("code",[t._v("ValueError")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("In case server could not be reached, it throws "),a("code",[t._v("ServiceTimeOutError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ServiceTimeOutError")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("In case "),a("code",[t._v("entity_id")]),t._v(" cannot be found in our server, it throws "),a("code",[t._v("EntityNotFoundError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.EntityNotFoundError")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("In case the transactions could not be extracted by us, it will throw "),a("code",[t._v("ExtractionFailedError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ExtractionFailedError")]),t._v(")")])])]),t._v(" "),a("h3",{attrs:{id:"salary-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#salary-dictionary"}},[t._v("#")]),t._v(" Salary Dictionary")]),t._v(" "),a("p",[t._v("Sample salary dictionary:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29979.15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unique_transaction_identifier_2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clean_transaction_note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Clean Transaction Note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"credit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-01-11 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29057.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"month_year"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1-2019"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merchant_category"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_channel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net_banking_transfer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SOME LONG TRANSACTION NOTE"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Each of the salary dictionary in the transaction list has the following keys:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("balance")]),t._v(": account balance just after this transaction")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(": a unique identifying hash for each transaction")]),t._v(" "),a("li",[a("code",[t._v("description")]),t._v(": describes more information about the "),a("code",[t._v("transaction_channel")]),t._v(" field. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#description"}},[t._v("this")]),t._v(" list for possible values.")],1),t._v(" "),a("li",[a("code",[t._v("clean_transaction_note")]),t._v(": Transaction note in clean English words")]),t._v(" "),a("li",[a("code",[t._v("account_id")]),t._v(": unique UUID4 identifier for the account to which the transaction belongs to")]),t._v(" "),a("li",[a("code",[t._v("transaction_type")]),t._v(": can be "),a("code",[t._v("debit")]),t._v(" or "),a("code",[t._v("credit")])]),t._v(" "),a("li",[a("code",[t._v("date")]),t._v(": date of transaction")]),t._v(" "),a("li",[a("code",[t._v("amount")]),t._v(": indicates the transaction amount")]),t._v(" "),a("li",[a("code",[t._v("month_year")]),t._v(": month and year for which the salary is")]),t._v(" "),a("li",[a("code",[t._v("merchant_category")]),t._v(": the category of the merchant in case a transaction is with a merchant. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#merchant-category"}},[t._v("this")]),t._v(" list of possible values.")],1),t._v(" "),a("li",[a("code",[t._v("transaction_channel")]),t._v(": refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#transaction-channel"}},[t._v("this")]),t._v(" list for possible values.")],1),t._v(" "),a("li",[a("code",[t._v("transaction_note")]),t._v(": exact transaction note / description present in the statement PDF")])]),t._v(" "),a("h2",{attrs:{id:"recurring-transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recurring-transactions"}},[t._v("#")]),t._v(" Recurring Transactions")]),t._v(" "),a("p",[t._v("To fetch recurring transactions use the "),a("code",[t._v("get_credit_recurring")]),t._v(" and "),a("code",[t._v("get_debit_recurring")]),t._v(" methods for credit and debit respectively. Both of these return an "),a("strong",[t._v("iterator")]),t._v(" to the recurring dictionary list, after fetching.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("credit_recurring "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_credit_recurring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the credit recurring dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" credit_recurr_dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" credit_recurring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("credit_recurr_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("debit_recurring "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_debit_recurring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the debit recurring dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" debit_recurr_dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" debit_recurring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("debit_recurr_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("If the value was not previously retrieved, it will poll and check for progress, and then fetch and cache the retrieved value for next usage.")])]),t._v(" "),a("h3",{attrs:{id:"arguments-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-5"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("Both of these methods have the following "),a("strong",[t._v("optional")]),t._v(" arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reload")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("If provided as "),a("code",[t._v("True")]),t._v(", it will ignore the cached value, and again make an API call and re-fetch the values")]),t._v(" "),a("td",[a("code",[t._v("False")])])]),t._v(" "),a("tr",[a("td",[t._v("account_id")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("If provided, only the recurring transactions of specific "),a("code",[t._v("account_id")]),t._v(" will be retrieved")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("h3",{attrs:{id:"exceptions-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions-5"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In case there is any problem with arguments passed or if "),a("code",[t._v("create")]),t._v(" method was used while creating the entity instance and the entity object was not created on the server yet, it throws "),a("code",[t._v("ValueError")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("In case server could not be reached, it throws "),a("code",[t._v("ServiceTimeOutError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ServiceTimeOutError")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("In case "),a("code",[t._v("entity_id")]),t._v(" cannot be found in our server, it throws "),a("code",[t._v("EntityNotFoundError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.EntityNotFoundError")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("In case the transactions could not be extracted by us, it will throw "),a("code",[t._v("ExtractionFailedError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ExtractionFailedError")]),t._v(")")])])]),t._v(" "),a("h3",{attrs:{id:"recurring-transaction-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recurring-transaction-dictionary"}},[t._v("#")]),t._v(" Recurring Transaction Dictionary")]),t._v(" "),a("p",[t._v("Sample recurring transaction dictionary:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end_date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-01-11 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transactions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_channel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net_banking_transfer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SOME LONG TRANSACTION NOTE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unique_transaction_identifier_1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"credit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27598.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-12-12 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32682.78")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_channel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net_banking_transfer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SOME LONG TRANSACTION NOTE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unique_transaction_identifier_2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"credit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29057.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-01-11 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29979.15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"median"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29057.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start_date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-12-12 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_channel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NET_BANKING_TRANSFER"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Each of the recurring transaction dictionary (both credit and debit) has the following keys:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("account_id")]),t._v(": unique UUID4 identifier for the account to which transaction set belongs to")]),t._v(" "),a("li",[a("code",[t._v("start_date")]),t._v(": the start date for the recurring transaction set")]),t._v(" "),a("li",[a("code",[t._v("end_date")]),t._v(": end date for the recurring transaction set")]),t._v(" "),a("li",[a("code",[t._v("transaction_channel")]),t._v(": transaction channel in upper case. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#transaction-channel"}},[t._v("this")]),t._v(" list for possible values.")],1),t._v(" "),a("li",[a("code",[t._v("median")]),t._v(": median of the transaction amounts under the given recurring transaction set")]),t._v(" "),a("li",[a("code",[t._v("transactions")]),t._v(": list of transaction dictionary under the recurring transaction set. Each transaction dictionary here has the same keys as a transaction dictionary in "),a("code",[t._v("get_transactions")]),t._v(" (Refer "),a("RouterLink",{attrs:{to:"/bank-connect/python.html#transaction-dictionary"}},[t._v("here")]),t._v(" to know about the keys).")],1)]),t._v(" "),a("h2",{attrs:{id:"lender-transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lender-transactions"}},[t._v("#")]),t._v(" Lender Transactions")]),t._v(" "),a("p",[t._v("To fetch lender transactions use the "),a("code",[t._v("get_lender_transactions")]),t._v(" method. It returns an "),a("strong",[t._v("iterator")]),t._v(" to the lender transaction dictionary list, after fetching.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("lender_transactions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_lender_transactions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printing the lender transaction dictionary using iterator")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" lender_transaction "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" lender_transactions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lender_transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("If the value was not previously retrieved, it will poll and check for progress, and then fetch and cache the retrieved value for next usage.")])]),t._v(" "),a("h3",{attrs:{id:"arguments-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-6"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This method also has the following "),a("strong",[t._v("optional")]),t._v(" arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reload")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("If provided as "),a("code",[t._v("True")]),t._v(", it will ignore the cached value, and again make an API call and re-fetch the values")]),t._v(" "),a("td",[a("code",[t._v("False")])])]),t._v(" "),a("tr",[a("td",[t._v("account_id")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("If provided, only the lender transactions of specific "),a("code",[t._v("account_id")]),t._v(" will be retrieved")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("from_date")]),t._v(" "),a("td",[a("code",[t._v("datetime.date")]),t._v(" object")]),t._v(" "),a("td",[t._v("If provided, only the lender transactions with a date greater than or equal to "),a("code",[t._v("from_date")]),t._v(" will be retrieved.")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("to_date")]),t._v(" "),a("td",[a("code",[t._v("datetime.date")]),t._v(" object")]),t._v(" "),a("td",[t._v("If provided, only the lender transactions with a date less than or equal to "),a("code",[t._v("to_date")]),t._v(" will be retrieved.")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("h3",{attrs:{id:"exceptions-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions-6"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In case there is any problem with arguments passed or if "),a("code",[t._v("create")]),t._v(" method was used while creating the entity instance and the entity object was not created on the server yet, it throws "),a("code",[t._v("ValueError")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("In case server could not be reached, it throws "),a("code",[t._v("ServiceTimeOutError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ServiceTimeOutError")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("In case "),a("code",[t._v("entity_id")]),t._v(" cannot be found in our server, it throws "),a("code",[t._v("EntityNotFoundError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.EntityNotFoundError")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("In case the transactions could not be extracted by us, it will throw "),a("code",[t._v("ExtractionFailedError")]),t._v("\n("),a("code",[t._v("finbox_bankconnect.custom_exceptions.ExtractionFailedError")]),t._v(")")])])]),t._v(" "),a("h3",{attrs:{id:"lender-transaction-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lender-transaction-dictionary"}},[t._v("#")]),t._v(" Lender Transaction Dictionary")]),t._v(" "),a("p",[t._v("Sample lender transaction dictionary:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_note"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SOME LONG TRANSACTION NOTE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unique_transaction_identifier_2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lender_transaction"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_for_account"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5188.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-01-08 00:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merchant_category"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("922.15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transaction_channel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net_banking_transfer"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Each of the lender transaction dictionary in the transaction list has the following keys:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("transaction_note")]),t._v(": exact transaction note / description present in the statement PDF")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(": a unique identifying hash for each transaction")]),t._v(" "),a("li",[a("code",[t._v("description")]),t._v(": describes more information about the "),a("code",[t._v("transaction_channel")]),t._v(" field. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#description"}},[t._v("this")]),t._v(" list for possible values.")],1),t._v(" "),a("li",[a("code",[t._v("account_id")]),t._v(": unique UUID4 identifier for the account to which the transaction belongs to")]),t._v(" "),a("li",[a("code",[t._v("transaction_type")]),t._v(": can be "),a("code",[t._v("debit")]),t._v(" or "),a("code",[t._v("credit")])]),t._v(" "),a("li",[a("code",[t._v("amount")]),t._v(": indicates the transaction amount")]),t._v(" "),a("li",[a("code",[t._v("date")]),t._v(": date of transaction")]),t._v(" "),a("li",[a("code",[t._v("merchant_category")]),t._v(": the category of the merchant in case a transaction is with a merchant. Refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#merchant-category"}},[t._v("this")]),t._v(" list of possible values.")],1),t._v(" "),a("li",[a("code",[t._v("balance")]),t._v(": account balance just after this transaction")]),t._v(" "),a("li",[a("code",[t._v("transaction_channel")]),t._v(": refer to "),a("RouterLink",{attrs:{to:"/bank-connect/appendix.html#transaction-channel"}},[t._v("this")]),t._v(" list for possible values.")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);