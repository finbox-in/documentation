(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{389:function(t,s,e){"use strict";e.r(s);var a=e(8),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"bankconnect-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bankconnect-management"}},[t._v("#")]),t._v(" BankConnect: Management")]),t._v(" "),s("p",[t._v("BankConnect REST APIs also provide additional APIs for management purposes. This article lists them.")]),t._v(" "),s("h2",{attrs:{id:"authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("p",[t._v("FinBox BankConnect REST API uses API keys to authenticate requests. All API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.")]),t._v(" "),s("p",[t._v("To make a successful request, required "),s("strong",[t._v("headers mentioned with each API")]),t._v(" must be present in the request.")]),t._v(" "),s("p",[t._v("In case wrong/incomplete/no keys were passed in headers, response will have "),s("strong",[t._v("401")]),t._v(" HTTP Code and payload as follows:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"detail"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authentication credentials were not provided."')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"net-banking-health"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#net-banking-health"}},[t._v("#")]),t._v(" Net Banking Health")]),t._v(" "),s("p",[t._v("This API can be used to check Health status for banks in Net Banking mode.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Endpoint")]),t._v(" "),s("p",[t._v("GET "),s("strong",[t._v(t._s(t.$page.frontmatter.base_url)+"/"+t._s(t.$page.frontmatter.version)+"/net_banking_health/")])])]),t._v(" "),s("h3",{attrs:{id:"authentication-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication-2"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("p",[t._v("Request header "),s("code",[t._v("x-api-key")]),t._v(" with API Key as value must be present in request.")]),t._v(" "),s("h3",{attrs:{id:"response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("p",[t._v("On successful fetching, the API gives a "),s("strong",[t._v("200 HTTP code")]),t._v(" with following response:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bank"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AXIS"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"updated_at"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-02 13:28:59"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"health_up"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"issue_details"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bank"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HDFC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"updated_at"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-02 13:28:59"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"health_up"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"issue_details"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some cases are failing, when users are entering wrong captcha"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("Key")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("bank")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("indicates the bank identifier in upper case, refer "),s("RouterLink",{attrs:{to:"/bank-connect/appendix.html#bank-identifiers"}},[t._v("here")]),t._v(" for complete list")],1)]),t._v(" "),s("tr",[s("td",[t._v("updated_at")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("last check date time (in UTC) for bank in "),s("code",[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" format")])]),t._v(" "),s("tr",[s("td",[t._v("health_up")]),t._v(" "),s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("indicates whether the bank status is up, "),s("code",[t._v("true")]),t._v(" indicates bank status is up")])]),t._v(" "),s("tr",[s("td",[t._v("issue_details")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("present if "),s("code",[t._v("health_up")]),t._v(" is "),s("code",[t._v("false")]),t._v(", otherwise "),s("code",[t._v("null")])])])])]),t._v(" "),s("h2",{attrs:{id:"get-pdfs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-pdfs"}},[t._v("#")]),t._v(" Get PDFs")]),t._v(" "),s("p",[t._v("This API can be used to fetch statement PDF files for a given entity.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Endpoint")]),t._v(" "),s("p",[t._v("GET "),s("strong",[t._v(t._s(t.$page.frontmatter.base_url)+"/"+t._s(t.$page.frontmatter.version)+"/entity/"),s("code",[t._v("<entity_id>")]),t._v("/get_pdfs/")])])]),t._v(" "),s("h3",{attrs:{id:"authentication-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication-3"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("p",[t._v("Request headers "),s("code",[t._v("x-api-key")]),t._v(" with API Key as value and "),s("code",[t._v("server-hash")]),t._v(" with Server Hash as value must be present in request.")]),t._v(" "),s("h3",{attrs:{id:"response-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-2"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("p",[t._v("On fetching information successfully, the response would be of the following format with "),s("strong",[t._v("200 HTTP code")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statements"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statement_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statement_uuid4_here"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bank_name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"axis"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pdf_password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pdf_url"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://long_url_here"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"account_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account_uuid4_here"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Here, "),s("code",[t._v("statements")]),t._v(" key will contain a list of statements for the given entity. Each of this list item is an object with following keys:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("statement_id")]),t._v(": a unique identifier for this statement")]),t._v(" "),s("li",[s("code",[t._v("bank_name")]),t._v(": a valid bank identifier")]),t._v(" "),s("li",[s("code",[t._v("pdf_password")]),t._v(": Password for the PDF file. Will be "),s("code",[t._v("null")]),t._v(" if no password.")]),t._v(" "),s("li",[s("code",[t._v("pdf_url")]),t._v(": Contains a URL for the PDF file.")]),t._v(" "),s("li",[s("code",[t._v("account_id")]),t._v(": a unique identifier for a customer bank account")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("IMPORTANT")]),t._v(" "),s("ul",[s("li",[t._v('Statement files on our system get automatically deleted after 30 days of upload date has passed. Post this, the "pdf_url" key will be a blank string. '),s("code",[t._v('""')]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("pdf_url")]),t._v(" if present is valid for 1 hour since the time of link generation")]),t._v(" "),s("li",[t._v("In case the "),s("code",[t._v("entity_id")]),t._v(" doesn't exists the API will return a "),s("strong",[t._v("404 HTTP Code")]),t._v(".")])])]),t._v(" "),s("h2",{attrs:{id:"list-entities"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-entities"}},[t._v("#")]),t._v(" List Entities")]),t._v(" "),s("p",[t._v("Lists all entities (paginated) created under your account.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Endpoint")]),t._v(" "),s("p",[t._v("GET "),s("strong",[t._v(t._s(t.$page.frontmatter.base_url)+"/"+t._s(t.$page.frontmatter.version)+"/entity/")])])]),t._v(" "),s("h3",{attrs:{id:"authentication-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication-4"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("p",[t._v("Request headers "),s("code",[t._v("x-api-key")]),t._v(" with API Key as value and "),s("code",[t._v("server-hash")]),t._v(" with Server Hash as value must be present in request.")]),t._v(" "),s("h3",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("Description")]),t._v(" "),s("th",[t._v("Required")]),t._v(" "),s("th",[t._v("Default")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("page")]),t._v(" "),s("td",[t._v("integer")]),t._v(" "),s("td",[t._v("page number")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("link_id")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("to filter based on link_id")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("-")])])])]),t._v(" "),s("h3",{attrs:{id:"response-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-3"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("p",[t._v("On successful fetching, the API gives a "),s("strong",[t._v("200 HTTP code")]),t._v(" with following response:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"count"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"next"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some_url"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"previous"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"results"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entity_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some_uuid4_1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"link_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meta_data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entity_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some_uuid4_2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"link_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meta_data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("count")]),t._v(" here indicates the total number of entities, "),s("code",[t._v("next")]),t._v(" and "),s("code",[t._v("previous")]),t._v(" have URLs for next and previous pages respectively. If no page exists, they store "),s("code",[t._v("null")]),t._v(" as value.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("ul",[s("li",[t._v("There are "),s("strong",[t._v("10 records")]),t._v(" per page at max")]),t._v(" "),s("li",[t._v("This API can also be used to fetch Entity ID for a given Link ID")])])]),t._v(" "),s("h2",{attrs:{id:"getting-link-id-from-entity-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-link-id-from-entity-id"}},[t._v("#")]),t._v(" Getting Link ID from Entity ID")]),t._v(" "),s("p",[t._v("If required you can fetch "),s("code",[t._v("link_id")]),t._v(" from an "),s("code",[t._v("entity_id")]),t._v(" using the API below:")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Endpoint")]),t._v(" "),s("p",[t._v("GET "),s("strong",[t._v(t._s(t.$page.frontmatter.base_url)+"/"+t._s(t.$page.frontmatter.version)+"/entity/"),s("code",[t._v("<entity_id>")]),t._v("/")])])]),t._v(" "),s("h3",{attrs:{id:"authentication-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication-5"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("p",[t._v("Request headers "),s("code",[t._v("x-api-key")]),t._v(" with API Key as value and "),s("code",[t._v("server-hash")]),t._v(" with Server Hash as value must be present in request.")]),t._v(" "),s("h3",{attrs:{id:"response-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-4"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("p",[t._v("On successful fetching, the API gives a "),s("strong",[t._v("200 HTTP code")]),t._v(" with following response:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entity_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid4_you_sent"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"link_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the_link_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meta_data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"meta_data_value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("In case no "),s("code",[t._v("link_id")]),t._v(" exists for the given entity, the value of "),s("code",[t._v("link_id")]),t._v(" comes as "),s("code",[t._v("null")]),t._v(" in response.")]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("Not Found")]),t._v(" "),s("p",[t._v("In case no entity with the provided "),s("code",[t._v("entity_id")]),t._v(" exists, the API will return a response with "),s("strong",[t._v("404 (Not Found) error code")]),t._v(".")])])])}),[],!1,null,null,null);s.default=n.exports}}]);