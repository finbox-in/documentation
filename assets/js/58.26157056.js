(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{354:function(s,t,e){"use strict";e.r(t);var a=e(8),n=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"deviceconnect-handle-permissions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deviceconnect-handle-permissions"}},[s._v("#")]),s._v(" DeviceConnect: Handle Permissions")]),s._v(" "),t("p",[s._v("When integrating DeviceConnect, developers must handle runtime permissions while invoking helper methods. The SDK intelligently syncs alternate data based on the permissions provided by the user.")]),s._v(" "),t("h3",{attrs:{id:"create-a-consent-screen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-consent-screen"}},[s._v("#")]),s._v(" Create a Consent Screen")]),s._v(" "),t("p",[s._v("To ensure a seamless user experience, it’s essential to create a Consent Screen before requesting permissions. It’s highly recommended to provide context on:")]),s._v(" "),t("ul",[t("li",[s._v("The permissions being requested.")]),s._v(" "),t("li",[s._v("How the data will be collected.")]),s._v(" "),t("li",[s._v("The benefits users will gain from granting these permissions.\nAdditionally, include a link to the Privacy Policy at the bottom of the screen for transparency.")])]),s._v(" "),t("p",[s._v("Here’s an example structure for a Consent Screen")]),s._v(" "),t("img",{staticStyle:{width:"500",height:"600"},attrs:{src:"/Permissions_screen.jpg",alt:"Permission Screen"}}),s._v(" "),t("h3",{attrs:{id:"runtime-permissions-added-by-the-sdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#runtime-permissions-added-by-the-sdk"}},[s._v("#")]),s._v(" Runtime Permissions Added by the SDK")]),s._v(" "),t("p",[s._v("Below are the list of Runtime permissions the sdk automatically adds to the application Manifest, if Manifest Merger is enabled:")]),s._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("uses-permission")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("android.permission.READ_PHONE_STATE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("uses-permission")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("android.permission.READ_SMS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("uses-permission")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("android.permission.RECEIVE_SMS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("uses-permission")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("android.permission.ACCESS_COARSE_LOCATION"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])])]),t("h3",{attrs:{id:"removing-unused-permissions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#removing-unused-permissions"}},[s._v("#")]),s._v(" Removing Unused Permissions")]),s._v(" "),t("p",[s._v("To remove the unused permissions, add node marker value as "),t("code",[s._v("remove")]),s._v(" to that permission as shown below:")]),s._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("uses-permission")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("android.permission.ACCESS_FINE_LOCATION"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("tools:")]),s._v("node")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("remove"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])])]),t("h3",{attrs:{id:"if-manifest-merger-is-not-enabled"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-manifest-merger-is-not-enabled"}},[s._v("#")]),s._v(" If Manifest Merger is not enabled")]),s._v(" "),t("p",[s._v("Add the required permissions manually to your app’s manifest file. Use the list of permissions provided above as a reference. If Manifest Merger is enabled, you can skip this section")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("BEST PRACTICES")]),s._v(" "),t("ul",[t("li",[s._v("Clearly communicate why each permission is needed to the end user.")]),s._v(" "),t("li",[s._v("Only request permissions that are essential for the app’s functionality.")]),s._v(" "),t("li",[s._v("Ensure that your Permission Screen aligns with Google Play policies for transparency and user consent")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);